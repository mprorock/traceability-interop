name: Credentials Issue

on:
  workflow_dispatch:

jobs:
  unit-credentials-issue:
    name: Issue Credential
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Mavennet"
            actor: "MAVENNET_STAGING"
          - name: "mesur.io"
            actor: "MESUR_IO_PRODUCTION"
          - name: "Transmute"
            actor: "TRANSMUTE_STAGING"
    steps:
      # Check out repo, setup node, and install dependencies.
      # @see https://github.com/actions/setup-node#usage
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm ci
      - name: Run Tests
        env:
          organization_did_web: ${{secrets[format('{0}_ORGANIZATION_DID_WEB', matrix.actor)]}}
          client_id: ${{secrets[format('{0}_CLIENT_ID', matrix.actor)]}}
          client_secret: ${{secrets[format('{0}_CLIENT_SECRET', matrix.actor)]}}
          token_audience: ${{secrets[format('{0}_TOKEN_AUDIENCE', matrix.actor)]}}
          token_endpoint: ${{secrets[format('{0}_TOKEN_ENDPOINT', matrix.actor)]}}
          api_base_url: ${{secrets[format('{0}_API_BASE_URL', matrix.actor)]}}
        run: |
          npx newman run ./docs/tutorials/credentials-issue/credentials-issue.postman_collection.json \
          --env-var ORGANIZATION_DID_WEB=$organization_did_web \
          --env-var CLIENT_ID=$client_id \
          --env-var CLIENT_SECRET=$client_secret \
          --env-var TOKEN_AUDIENCE=$token_audience \
          --env-var TOKEN_ENDPOINT=$token_endpoint \
          --env-var API_BASE_URL=$api_base_url \
          --reporters cli,html,json \
          --reporter-html-export "newman/${{format('{0}-{1}-{2}.html', github.run_id, github.job, matrix.name)}}" \
          --reporter-json-export "newman/${{format('{0}-{1}-{2}.json', github.run_id, github.job, matrix.name)}}"
      # Sanitize newman output and write all reports to the `./docs/reports`
      # folder for publishing, excluding `index.html`, which will be rebuilt
      # during publishing.
      - name: Sanitize Newman Output
        if: ${{ always() }} # Run even when postman tests fail
        run: |
          npm run report:prepare
          rm -f ./docs/reports/index.html
      - uses: actions/upload-artifact@v3
        if: ${{ always() }} # Run even when postman tests fail
        with:
          name: credentials-issue
          path: docs/reports/
